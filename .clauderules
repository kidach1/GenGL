# Claude-OpenGL プロジェクトルール

## ディレクトリ構成
- src/           # ソースコード
- include/       # ヘッダーファイル
- shaders/       # GLSLシェーダーファイル
- assets/        # テクスチャ、モデルなど
- build/         # ビルド出力（gitignore対象）
- libs/          # サードパーティライブラリ（glad, glfw, glm）
- tests/         # テストコード

## コードスタイル
- ヘッダーファイル: .hpp、実装ファイル: .cpp
- クラス名: PascalCase (例: OpenGLRenderer)
- メソッド名: camelCase (例: initializeShaders())
- 定数: UPPER_SNAKE_CASE (例: MAX_LIGHTS)
- メンバ変数: m_プレフィックス (例: m_window)
- インデント: 4スペース
- 現代的なC++機能を使用 (C++17推奨)
- 各ファイルの先頭に簡潔なファイル説明コメント
- 関数の上に簡潔な説明コメント

## ビルド規則
- CMakeを使用 (最小バージョン: 3.10)
- コマンドラインビルド手順:
  ```
  mkdir -p build && cd build
  cmake ..
  make
  ```
- デバッグ・リリースビルド構成:
  ```
  # デバッグビルド
  cmake -DCMAKE_BUILD_TYPE=Debug ..
  
  # リリースビルド
  cmake -DCMAKE_BUILD_TYPE=Release ..
  ```

## コーディングプラクティス
- RAII原則に従う
- スマートポインタの使用（生のポインタを避ける）
- 例外より戻り値でエラー処理
- コメントは「何をするか」より「なぜそれをするか」を説明
- 単一責任の原則に従う
- グローバル変数を避ける

## バージョン管理
- 機能開発は個別のブランチで行う
- コミットメッセージは明確で説明的に
- マージ前にコードレビュー
